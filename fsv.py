import os


def load_exclusions(file_path=os.path.join(os.path.dirname(os.path.abspath(__file__)), "exceptions.txt")):
    """–ó–∞–≥—Ä—É–∂–∞–µ—Ç –ø–∞–ø–∫–∏, —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è –∏ —Ñ–∞–π–ª—ã –¥–ª—è –∏—Å–∫–ª—é—á–µ–Ω–∏—è –∏–∑ —Ñ–∞–π–ª–∞."""
    exclude_dirs = []
    exclude_extensions = []
    exclude_files = []
    try:
        with open(file_path, 'r') as file:
            for line in file:
                entry = line.strip()
                if entry:
                    # –ï—Å–ª–∏ –∏—Å–∫–ª—é—á–µ–Ω–∏–µ –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å '*.', —Ç–æ —ç—Ç–æ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ —Ñ–∞–π–ª–∞
                    if entry.startswith("*."):
                        exclude_extensions.append(entry[1:])  # –î–æ–±–∞–≤–ª—è–µ–º —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ –±–µ–∑ '*'
                    # –ï—Å–ª–∏ –∏–º—è –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å —Ç–æ—á–∫–∏ –∏ –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç "*.", —ç—Ç–æ —Å–∫—Ä—ã—Ç–∞—è –ø–∞–ø–∫–∞
                    elif entry.startswith(".") and "." not in entry[1:]:
                        exclude_dirs.append(entry)  # –î–æ–±–∞–≤–ª—è–µ–º –∫–∞–∫ –∏–º—è –ø–∞–ø–∫–∏
                    # –ï—Å–ª–∏ —É–∫–∞–∑–∞–Ω–æ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–µ –∏–º—è —Ñ–∞–π–ª–∞
                    elif "." in entry:
                        exclude_files.append(entry)  # –î–æ–±–∞–≤–ª—è–µ–º –∫–∞–∫ –∏–º—è —Ñ–∞–π–ª–∞
                    else:
                        exclude_dirs.append(entry)  # –ò–Ω–∞—á–µ –¥–æ–±–∞–≤–ª—è–µ–º –∫–∞–∫ –∏–º—è –ø–∞–ø–∫–∏
    except FileNotFoundError:
        print(f"–§–∞–π–ª {file_path} –Ω–µ –Ω–∞–π–¥–µ–Ω. –ò—Å–∫–ª—é—á–µ–Ω–∏–π –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω–æ.")

    print("\n\n–ò—Å–∫–ª—é—á–µ–Ω–∏—è –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é:")
    print("  - –∏–≥–Ω–æ—Ä–∏—Ä—É–µ–º—ã–µ –ø–∞–ø–∫–∏:\n    ", exclude_dirs)
    print("  - –∏–≥–Ω–æ—Ä–∏—Ä—É–µ–º—ã–µ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è:\n    ", exclude_extensions)
    print("  - –∏–≥–Ω–æ—Ä–∏—Ä—É–µ–º—ã–µ —Ñ–∞–π–ª—ã:\n    ", exclude_files)
    return exclude_dirs, exclude_extensions, exclude_files


def get_folder_structure(path, depth=0, exclude_dirs=None, exclude_extensions=None, exclude_files=None):
    if exclude_dirs is None:
        exclude_dirs = []
    if exclude_extensions is None:
        exclude_extensions = []
    if exclude_files is None:
        exclude_files = []
    structure = {}

    try:
        with os.scandir(path) as entries:
            for entry in entries:
                if entry.is_dir():
                    # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –ø–∞–ø–∫–∏, –µ—Å–ª–∏ –æ–Ω–∏ –≤ —Å–ø–∏—Å–∫–µ –∏—Å–∫–ª—é—á–µ–Ω–∏–π
                    if entry.name in exclude_dirs:
                        continue
                    sub_structure = get_folder_structure(entry.path, depth + 1, exclude_dirs, exclude_extensions, exclude_files)
                    if sub_structure:  # –î–æ–±–∞–≤–ª—è–µ–º –ø–∞–ø–∫—É —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –æ–Ω–∞ –Ω–µ –ø—É—Å—Ç–∞—è
                        structure[entry.name] = sub_structure
                    else:
                        structure[entry.name] = {"<–ü—É—Å—Ç–∞—è –ø–∞–ø–∫–∞>": None}
                else:
                    # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º —Ñ–∞–π–ª—ã, –µ—Å–ª–∏ –∏—Ö —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ –∏–ª–∏ –∏–º—è –≤ —Å–ø–∏—Å–∫–µ –∏—Å–∫–ª—é—á–µ–Ω–∏–π
                    if any(entry.name.endswith(ext) for ext in exclude_extensions) or entry.name in exclude_files:
                        continue
                    structure[entry.name] = None
    except PermissionError:
        structure['Permission Denied'] = None
    return structure


def format_structure(structure, indent=0):
    formatted = ""
    items = list(structure.items())

    # –†–∞–∑–¥–µ–ª—è–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã –Ω–∞ –ø–∞–ø–∫–∏ –∏ —Ñ–∞–π–ª—ã
    folders = [(k, v) for k, v in items if isinstance(v, dict)]
    files = [(k, v) for k, v in items if not isinstance(v, dict)]

    # –°–Ω–∞—á–∞–ª–∞ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –ø–∞–ø–∫–∏
    for i, (key, value) in enumerate(folders):
        if i == len(folders) - 1 and not files:  # –ü–æ—Å–ª–µ–¥–Ω—è—è –ø–∞–ø–∫–∞ –∏ –Ω–µ—Ç —Ñ–∞–π–ª–æ–≤
            formatted += "‚îÇ   "*indent + "‚îî‚îÄ‚îÄ‚îÄüìÅ " + key + "\n"
        else:
            formatted += "‚îÇ   "*indent + "‚îú‚îÄ‚îÄ‚îÄüìÅ " + key + "\n"
        formatted += format_structure(value, indent + 1)

    # –ó–∞—Ç–µ–º –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Ñ–∞–π–ª—ã
    for i, (key, value) in enumerate(files):
        if i == len(files) - 1:  # –ü–æ—Å–ª–µ–¥–Ω–∏–π —Ñ–∞–π–ª
            formatted += "‚îÇ   "*indent + "‚îî‚îÄ‚îÄ‚îÄüìÑ " + key + "\n"
        else:
            formatted += "‚îÇ   "*indent + "‚îú‚îÄ‚îÄ‚îÄüìÑ " + key + "\n"

    return formatted


# –ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
while True:
    path = input("\n–í–≤–µ–¥–∏—Ç–µ –ø—É—Ç—å –∫ –ø–∞–ø–∫–µ: ")
    if path:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å –ø—É—Ç–∏
        try:
            if not os.path.exists(path):
                print("–£–∫–∞–∑–∞–Ω–Ω—ã–π –ø—É—Ç—å –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –ø—É—Ç–∏.")
                continue
            if not os.path.isdir(path):
                print("–£–∫–∞–∑–∞–Ω–Ω—ã–π –ø—É—Ç—å –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–µ–π. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ –ø—É—Ç—å –∫ –ø–∞–ø–∫–µ.")
                continue
            if any(char in path for char in ['<', '>', '|', '*', '?', '"']):
                print("–ü—É—Ç—å —Å–æ–¥–µ—Ä–∂–∏—Ç –Ω–µ–¥–æ–ø—É—Å—Ç–∏–º—ã–µ —Å–∏–º–≤–æ–ª—ã (<, >, |, *, ?, \"). –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∏—Å–ø—Ä–∞–≤—å—Ç–µ –ø—É—Ç—å.")
                continue
            break
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –ø—É—Ç–∏: {str(e)}")
            continue
    print("–ü—É—Ç—å –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ.")

folder_name = path.split(os.sep)[-1] if path != "." else "."

# –ó–∞–≥—Ä—É–∂–∞–µ–º –∏—Å–∫–ª—é—á–∞–µ–º—ã–µ –ø–∞–ø–∫–∏, —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è –∏ —Ñ–∞–π–ª—ã –∏–∑ —Ñ–∞–π–ª–∞
exclude_dirs, exclude_extensions, exclude_files = load_exclusions()

# –í–≤–æ–¥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏—Ö –∏—Å–∫–ª—é—á–µ–Ω–∏–π –¥–ª—è –ø–∞–ø–æ–∫
user_exclude_dirs = input("\n–í–≤–µ–¥–∏—Ç–µ –ø–∞–ø–∫–∏ –¥–ª—è –∏—Å–∫–ª—é—á–µ–Ω–∏—è —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é: ").split(",")
exclude_dirs += [dir.strip() for dir in user_exclude_dirs if dir.strip()]

# –í–≤–æ–¥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏—Ö –∏—Å–∫–ª—é—á–µ–Ω–∏–π –¥–ª—è —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–π —Ñ–∞–π–ª–æ–≤
user_exclude_extensions = input("–í–≤–µ–¥–∏—Ç–µ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è —Ñ–∞–π–ª–æ–≤ –¥–ª—è –∏—Å–∫–ª—é—á–µ–Ω–∏—è —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é (–Ω–∞–ø—Ä–∏–º–µ—Ä, *.py): ").split(",")
exclude_extensions += [ext.strip()[1:] for ext in user_exclude_extensions if ext.strip().startswith("*.")]

# –í–≤–æ–¥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏—Ö –∏—Å–∫–ª—é—á–µ–Ω–∏–π –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
user_exclude_files = input("–í–≤–µ–¥–∏—Ç–µ –∏–º–µ–Ω–∞ —Ñ–∞–π–ª–æ–≤ –¥–ª—è –∏—Å–∫–ª—é—á–µ–Ω–∏—è —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é: ").split(",")
exclude_files += [file.strip() for file in user_exclude_files if file.strip()]

# –í—ã–≤–æ–¥–∏–º –∏—Ç–æ–≥–æ–≤—ã–µ –∏—Å–∫–ª—é—á–µ–Ω–∏—è
print("\n\n–ò—Ç–æ–≥–æ–≤—ã–µ –∏—Å–∫–ª—é—á–µ–Ω–∏—è:")
print("  - –∏–≥–Ω–æ—Ä–∏—Ä—É–µ–º—ã–µ –ø–∞–ø–∫–∏:\n    ", exclude_dirs)
print("  - –∏–≥–Ω–æ—Ä–∏—Ä—É–µ–º—ã–µ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è:\n    ", exclude_extensions)
print("  - –∏–≥–Ω–æ—Ä–∏—Ä—É–µ–º—ã–µ —Ñ–∞–π–ª—ã:\n    ", exclude_files)

folder_structure = get_folder_structure(path, exclude_dirs=exclude_dirs, exclude_extensions=exclude_extensions, exclude_files=exclude_files)
if not folder_structure:
    print(f"\n–ü–∞–ø–∫–∞ üóÉÔ∏è '{folder_name}' –ø—É—Å—Ç–∞ –∏–ª–∏ –≤—Å—ë —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –∏—Å–∫–ª—é—á–µ–Ω–æ!")
else:
    print("\n–°—Ç—Ä—É–∫—Ç—É—Ä–∞ –ø–∞–ø–∫–∏:\n")
    print(f"üóÉÔ∏è {folder_name}")
    print(format_structure(folder_structure))
